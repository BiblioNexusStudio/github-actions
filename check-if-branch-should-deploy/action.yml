# This action checks if a branch should be deployed by verifying if it's main/master
# or if it's a divergent branch (like a hotfix) that's ahead of main/master.
#
# This is useful to avoid cluttering GitHub deployment lists with the initial branch
# created during the hotfix process. i.e. it's unnecessary to have a deployment created
# when creating a new branch that points to the same commit as master.
#
# Sets a `should_deploy` output to `true` or `false`

name: 'Check If Branch Should Deploy'
description: "Checks if the branch is master/main or if it's a hotfix being applied."
inputs:
  current_branch:
    description: 'Current branch.'
    required: true

runs:
  using: 'composite'
  steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - id: check
      shell: bash
      run: |
        if [[ "${{ inputs.current_branch }}" == "main" ]] || [[ "${{ inputs.current_branch }}" == "master" ]]; then
          echo "should_deploy=true" >> $GITHUB_OUTPUT
        elif git rev-parse --verify origin/main >/dev/null 2>&1; then
          if ! git merge-base --is-ancestor HEAD origin/main; then
            echo "should_deploy=true" >> $GITHUB_OUTPUT
          else
            echo "should_deploy=false" >> $GITHUB_OUTPUT
          fi
        elif git rev-parse --verify origin/master >/dev/null 2>&1; then
          if ! git merge-base --is-ancestor HEAD origin/master; then
            echo "should_deploy=true" >> $GITHUB_OUTPUT
          else
            echo "should_deploy=false" >> $GITHUB_OUTPUT
          fi
        else
          echo "should_deploy=false" >> $GITHUB_OUTPUT
        fi

outputs:
  should_deploy:
    description: 'Whether the branch should be deployed'
    value: ${{ steps.check.outputs.should_deploy }}
